import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
    id "io.freefair.lombok" version "6.0.0-m2"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
    mavenCentral()
    maven { url 'https://masa.dy.fi/maven' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    modImplementation "fi.dy.masa.malilib:malilib-fabric-1.17.0:${project.malilib_version}"

    modImplementation "com.github.DarkKronicle:AdvancedChatCore:${project.advancedchat_version}"

    implementation "com.github.maowcraft:owo:${project.owo_version}"
    include "com.github.maowcraft:owo:${project.owo_version}"

    implementation 'org.openjdk.nashorn:nashorn-core:15.3'
    implementation 'org.javadelight:delight-nashorn-sandbox:0.2.5'

    include 'org.openjdk.nashorn:nashorn-core:15.3'
    include group: 'org.ow2.asm', name: 'asm', version: '7.3.1'
    include group: 'org.ow2.asm', name: 'asm-commons', version: '7.3.1'
    include group: 'org.ow2.asm', name: 'asm-tree', version: '7.3.1'
    include group: 'org.ow2.asm', name: 'asm-util', version: '7.3.1'

    include 'org.javadelight:delight-nashorn-sandbox:0.2.5'
    include group: 'org.webjars.bower', name: 'js-beautify', version: '1.9.0'
    include group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
