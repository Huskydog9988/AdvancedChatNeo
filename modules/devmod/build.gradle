plugins {
	alias(libs.plugins.fabric.loom)
	alias(libs.plugins.lombok)
}

def modVersion = "${libs.versions.minecraft.get()}-${libs.versions.mod.version.get()}"
version = modVersion
group = project.maven_group
def finalFileName = "${project.archives_base_name}-Devmod-${modVersion}.jar"

base {
	archivesName = project.archives_base_name
}

dependencies {
	minecraft(libs.minecraft)
	mappings(variantOf(libs.yarn.mappings) {
		classifier("v2")
	})
	modImplementation(libs.fabric.loader)
	modImplementation(libs.fabric.api)

	// // need for dependencies
	// modImplementation(libs.malilib)

	modImplementation(project(path: ":core"))
	modImplementation(project(path: ":modules:box"))
	modImplementation(project(path: ":modules:filters"))
	modImplementation(project(path: ":modules:hud"))
	modImplementation(project(path: ":modules:log"))
}

tasks {
	jar {
		// copy license into jar
		from("../../LICENSE.txt") {
			rename { "${it}" }
		}
		// archiveBaseName.set(rootProjectName + "-box")
		// destinationDirectory = layout.buildDirectory.dir("devlibs")
	}

	remapJar {
		setArchiveFileName(finalFileName)
		// setArchiveClassifier("Box")
		// setDestinationDirectory(layout.buildDirectory.dir("devlibs"))
	}
}

tasks.named("classes").configure {
	// ensure client used processed mod
	dependsOn tasks.withType(ProcessResources)
}

tasks.named("build") {
	dependsOn tasks.named("remapJar")
}