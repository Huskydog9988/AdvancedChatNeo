plugins {
	id 'fabric-loom' version '1.7.2'
	id "io.freefair.lombok" version "8.10"
}

version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group
def finalFileName = "${project.archives_base_name}-Box-${project.minecraft_version}-${project.mod_version}.jar"

base {
	archivesName = project.archives_base_name
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation "fi.dy.masa.malilib:malilib-fabric-1.21:${project.malilib_version}"

	implementation(project(path: ":core", configuration: "namedElements")) { transitive false }
	// modImplementation(project(path: ":core", configuration: "namedElements")) { transitive false }
	// modImplementation project(':core')
	// modImplementation "com.arematics:advancedchatcore:${project.advancedchat_version}"

	implementation "org.mariuszgromada.math:MathParser.org-mXparser:${project.mxparser_version}"
	include "org.mariuszgromada.math:MathParser.org-mXparser:${project.mxparser_version}"

	implementation "org.languagetool:language-en:5.5"
	// Transitive
	include "org.languagetool:language-en:5.5"
	include "org.languagetool:languagetool-core:5.5"
	include group: 'net.loomchild', name: 'segment', version: '2.0.3'
	include group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	include group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	include group: 'org.jetbrains.intellij.deps', name: 'trove4j', version: '1.0.20200330'
	include group: 'javax.measure', name: 'unit-api', version: '2.1.3'
	include group: 'tech.units', name: 'indriya', version: '1.3'
	include group: 'tech.uom.lib', name: 'uom-lib-common', version: '1.1'
	include group: 'org.carrot2', name: 'morfologik-fsa', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-fsa-builders', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-speller', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-stemming', version: '2.1.7'
	include group: 'org.apache.opennlp', name: 'opennlp-tools', version: '1.9.3'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-chunk-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-postag-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-tokenize-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-chunk-models', version: '1.5'
	include group: 'com.carrotsearch', name: 'hppc', version: '0.9.0'
}

tasks {
	jar {
		// copy license into jar
		from("../LICENSE") {
			rename { "${it}" }
		}
		// archiveBaseName.set(rootProjectName + "-box")
		// destinationDirectory = layout.buildDirectory.dir("devlibs")
	}

	remapJar {
		setArchiveFileName(finalFileName)
		// setArchiveClassifier("Box")
		// setDestinationDirectory(layout.buildDirectory.dir("devlibs"))

		doFirst {
			println "Building remapJar for :core"
		}
	}
}

tasks.named("build") {
	dependsOn tasks.named("remapJar")
}